try{self["workbox:core:6.4.0"]&&_()}catch(e){}const e=(e,...s)=>{let r=e;return s.length>0&&(r+=` :: ${JSON.stringify(s)}`),r};class s extends Error{constructor(s,r){super(e(s,r)),this.name=s,this.details=r}}try{self["workbox:routing:6.4.0"]&&_()}catch(e){}const r=e=>e&&"object"==typeof e?e:{handle:e};class c{constructor(e,s,c="GET"){this.handler=r(s),this.match=e,this.method=c}setCatchHandler(e){this.catchHandler=r(e)}}class a extends c{constructor(e,s,r){super((({url:s})=>{const r=e.exec(s.href);if(r&&(s.origin===location.origin||0===r.index))return r.slice(1)}),s,r)}}class t{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:s}=e,r=this.handleRequest({request:s,event:e});r&&e.respondWith(r)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:s}=e.data,r=Promise.all(s.urlsToCache.map((s=>{"string"==typeof s&&(s=[s]);const r=new Request(...s);return this.handleRequest({request:r,event:e})})));e.waitUntil(r),e.ports&&e.ports[0]&&r.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:s}){const r=new URL(e.url,location.href);if(!r.protocol.startsWith("http"))return;const c=r.origin===location.origin,{params:a,route:t}=this.findMatchingRoute({event:s,request:e,sameOrigin:c,url:r});let i=t&&t.handler;const n=e.method;if(!i&&this.i.has(n)&&(i=this.i.get(n)),!i)return;let o;try{o=i.handle({url:r,request:e,event:s,params:a})}catch(e){o=Promise.reject(e)}const f=t&&t.catchHandler;return o instanceof Promise&&(this.o||f)&&(o=o.catch((async c=>{if(f)try{return await f.handle({url:r,request:e,event:s,params:a})}catch(e){e instanceof Error&&(c=e)}if(this.o)return this.o.handle({url:r,request:e,event:s});throw c}))),o}findMatchingRoute({url:e,sameOrigin:s,request:r,event:c}){const a=this.t.get(r.method)||[];for(const t of a){let a;const i=t.match({url:e,sameOrigin:s,request:r,event:c});if(i)return a=i,(Array.isArray(a)&&0===a.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(a=void 0),{route:t,params:a}}return{}}setDefaultHandler(e,s="GET"){this.i.set(s,r(e))}setCatchHandler(e){this.o=r(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new s("unregister-route-but-not-found-with-method",{method:e.method});const r=this.t.get(e.method).indexOf(e);if(!(r>-1))throw new s("unregister-route-route-not-registered");this.t.get(e.method).splice(r,1)}}let i;const n=()=>(i||(i=new t,i.addFetchListener(),i.addCacheListener()),i);function o(e,r,t){let i;if("string"==typeof e){const s=new URL(e,location.href);i=new c((({url:e})=>e.href===s.href),r,t)}else if(e instanceof RegExp)i=new a(e,r,t);else if("function"==typeof e)i=new c(e,r,t);else{if(!(e instanceof c))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});i=e}return n().registerRoute(i),i}try{self["workbox:strategies:6.4.0"]&&_()}catch(e){}const f={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null},d={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},h=e=>[d.prefix,e,d.suffix].filter((e=>e&&e.length>0)).join("-"),l=e=>{(e=>{for(const s of Object.keys(d))e(s)})((s=>{"string"==typeof e[s]&&(d[s]=e[s])}))},g=e=>e||h(d.precache),u=e=>e||h(d.runtime);function b(e,s){const r=new URL(e);for(const e of s)r.searchParams.delete(e);return r.href}class v{constructor(){this.promise=new Promise(((e,s)=>{this.resolve=e,this.reject=s}))}}const w=new Set;function p(e){return"string"==typeof e?new Request(e):e}class y{constructor(e,s){this.h={},Object.assign(this,s),this.event=s.event,this.l=e,this.g=new v,this.u=[],this.v=[...e.plugins],this.p=new Map;for(const e of this.v)this.p.set(e,{});this.event.waitUntil(this.g.promise)}async fetch(e){const{event:r}=this;let c=p(e);if("navigate"===c.mode&&r instanceof FetchEvent&&r.preloadResponse){const e=await r.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?c.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))c=await e({request:c.clone(),event:r})}catch(e){if(e instanceof Error)throw new s("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const t=c.clone();try{let e;e=await fetch(c,"navigate"===c.mode?void 0:this.l.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))e=await s({event:r,request:t,response:e});return e}catch(e){throw a&&await this.runCallbacks("fetchDidFail",{error:e,event:r,originalRequest:a.clone(),request:t.clone()}),e}}async fetchAndCachePut(e){const s=await this.fetch(e),r=s.clone();return this.waitUntil(this.cachePut(e,r)),s}async cacheMatch(e){const s=p(e);let r;const{cacheName:c,matchOptions:a}=this.l,t=await this.getCacheKey(s,"read"),i=Object.assign(Object.assign({},a),{cacheName:c});r=await caches.match(t,i);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))r=await e({cacheName:c,matchOptions:a,cachedResponse:r,request:t,event:this.event})||void 0;return r}async cachePut(e,r){const c=p(e);var a;await(a=0,new Promise((e=>setTimeout(e,a))));const t=await this.getCacheKey(c,"write");if(!r)throw new s("cache-put-with-no-response",{url:(i=t.url,new URL(String(i),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var i;const n=await this.m(r);if(!n)return!1;const{cacheName:o,matchOptions:f}=this.l,d=await self.caches.open(o),h=this.hasCallback("cacheDidUpdate"),l=h?await async function(e,s,r,c){const a=b(s.url,r);if(s.url===a)return e.match(s,c);const t=Object.assign(Object.assign({},c),{ignoreSearch:!0}),i=await e.keys(s,t);for(const s of i)if(a===b(s.url,r))return e.match(s,c)}(d,t.clone(),["__WB_REVISION__"],f):null;try{await d.put(t,h?n.clone():n)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of w)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:l,newResponse:n.clone(),request:t,event:this.event});return!0}async getCacheKey(e,s){const r=`${e.url} | ${s}`;if(!this.h[r]){let c=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))c=p(await e({mode:s,request:c,event:this.event,params:this.params}));this.h[r]=c}return this.h[r]}hasCallback(e){for(const s of this.l.plugins)if(e in s)return!0;return!1}async runCallbacks(e,s){for(const r of this.iterateCallbacks(e))await r(s)}*iterateCallbacks(e){for(const s of this.l.plugins)if("function"==typeof s[e]){const r=this.p.get(s),c=c=>{const a=Object.assign(Object.assign({},c),{state:r});return s[e](a)};yield c}}waitUntil(e){return this.u.push(e),e}async doneWaiting(){let e;for(;e=this.u.shift();)await e}destroy(){this.g.resolve(null)}async m(e){let s=e,r=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(s=await e({request:this.request,response:s,event:this.event})||void 0,r=!0,!s)break;return r||s&&200!==s.status&&(s=void 0),s}}class m{constructor(e={}){this.cacheName=u(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[s]=this.handleAll(e);return s}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const s=e.event,r="string"==typeof e.request?new Request(e.request):e.request,c="params"in e?e.params:void 0,a=new y(this,{event:s,request:r,params:c}),t=this.R(a,r,s);return[t,this.q(t,a,r,s)]}async R(e,r,c){let a;await e.runCallbacks("handlerWillStart",{event:c,request:r});try{if(a=await this.U(r,e),!a||"error"===a.type)throw new s("no-response",{url:r.url})}catch(s){if(s instanceof Error)for(const t of e.iterateCallbacks("handlerDidError"))if(a=await t({error:s,event:c,request:r}),a)break;if(!a)throw s}for(const s of e.iterateCallbacks("handlerWillRespond"))a=await s({event:c,request:r,response:a});return a}async q(e,s,r,c){let a,t;try{a=await e}catch(t){}try{await s.runCallbacks("handlerDidRespond",{event:c,request:r,response:a}),await s.doneWaiting()}catch(e){e instanceof Error&&(t=e)}if(await s.runCallbacks("handlerDidComplete",{event:c,request:r,response:a,error:t}),s.destroy(),t)throw t}}function R(e,s){const r=s();return e.waitUntil(r),r}try{self["workbox:precaching:6.4.0"]&&_()}catch(e){}function q(e){if(!e)throw new s("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const s=new URL(e,location.href);return{cacheKey:s.href,url:s.href}}const{revision:r,url:c}=e;if(!c)throw new s("add-to-cache-list-unexpected-type",{entry:e});if(!r){const e=new URL(c,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(c,location.href),t=new URL(c,location.href);return a.searchParams.set("__WB_REVISION__",r),{cacheKey:a.href,url:t.href}}class U{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:s})=>{s&&(s.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:s,cachedResponse:r})=>{if("install"===e.type&&s&&s.originalRequest&&s.originalRequest instanceof Request){const e=s.originalRequest.url;r?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return r}}}class C{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:s})=>{const r=(null==s?void 0:s.cacheKey)||this.C.getCacheKeyForURL(e.url);return r?new Request(r,{headers:e.headers}):e},this.C=e}}let L,P;async function E(e,r){let c=null;if(e.url){c=new URL(e.url).origin}if(c!==self.location.origin)throw new s("cross-origin-copy-response",{origin:c});const a=e.clone(),t={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=r?r(t):t,n=function(){if(void 0===L){const e=new Response("");if("body"in e)try{new Response(e.body),L=!0}catch(e){L=!1}L=!1}return L}()?a.body:await a.blob();return new Response(n,i)}class O extends m{constructor(e={}){e.cacheName=g(e.cacheName),super(e),this.L=!1!==e.fallbackToNetwork,this.plugins.push(O.copyRedirectedCacheableResponsesPlugin)}async U(e,s){const r=await s.cacheMatch(e);return r||(s.event&&"install"===s.event.type?await this.P(e,s):await this._(e,s))}async _(e,r){let c;const a=r.params||{};if(!this.L)throw new s("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const s=a.integrity,t=e.integrity,i=!t||t===s;c=await r.fetch(new Request(e,{integrity:t||s})),s&&i&&(this.O(),await r.cachePut(e,c.clone()))}return c}async P(e,r){this.O();const c=await r.fetch(e);if(!await r.cachePut(e,c.clone()))throw new s("bad-precaching-response",{url:e.url,status:c.status});return c}O(){let e=null,s=0;for(const[r,c]of this.plugins.entries())c!==O.copyRedirectedCacheableResponsesPlugin&&(c===O.defaultPrecacheCacheabilityPlugin&&(e=r),c.cacheWillUpdate&&s++);0===s?this.plugins.push(O.defaultPrecacheCacheabilityPlugin):s>1&&null!==e&&this.plugins.splice(e,1)}}O.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},O.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await E(e):e};class x{constructor({cacheName:e,plugins:s=[],fallbackToNetwork:r=!0}={}){this.k=new Map,this.N=new Map,this.S=new Map,this.l=new O({cacheName:g(e),plugins:[...s,new C({precacheController:this})],fallbackToNetwork:r}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.l}precache(e){this.addToCacheList(e),this.W||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.W=!0)}addToCacheList(e){const r=[];for(const c of e){"string"==typeof c?r.push(c):c&&void 0===c.revision&&r.push(c.url);const{cacheKey:e,url:a}=q(c),t="string"!=typeof c&&c.revision?"reload":"default";if(this.k.has(a)&&this.k.get(a)!==e)throw new s("add-to-cache-list-conflicting-entries",{firstEntry:this.k.get(a),secondEntry:e});if("string"!=typeof c&&c.integrity){if(this.S.has(e)&&this.S.get(e)!==c.integrity)throw new s("add-to-cache-list-conflicting-integrities",{url:a});this.S.set(e,c.integrity)}if(this.k.set(a,e),this.N.set(a,t),r.length>0){const e=`Workbox is precaching URLs without revision info: ${r.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return R(e,(async()=>{const s=new U;this.strategy.plugins.push(s);for(const[s,r]of this.k){const c=this.S.get(r),a=this.N.get(s),t=new Request(s,{integrity:c,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:t,event:e}))}const{updatedURLs:r,notUpdatedURLs:c}=s;return{updatedURLs:r,notUpdatedURLs:c}}))}activate(e){return R(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),s=await e.keys(),r=new Set(this.k.values()),c=[];for(const a of s)r.has(a.url)||(await e.delete(a),c.push(a.url));return{deletedURLs:c}}))}getURLsToCacheKeys(){return this.k}getCachedURLs(){return[...this.k.keys()]}getCacheKeyForURL(e){const s=new URL(e,location.href);return this.k.get(s.href)}getIntegrityForCacheKey(e){return this.S.get(e)}async matchPrecache(e){const s=e instanceof Request?e.url:e,r=this.getCacheKeyForURL(s);if(r){return(await self.caches.open(this.strategy.cacheName)).match(r)}}createHandlerBoundToURL(e){const r=this.getCacheKeyForURL(e);if(!r)throw new s("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:r},s.params),this.strategy.handle(s))}}const k=()=>(P||(P=new x),P);class N extends c{constructor(e,s){super((({request:r})=>{const c=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:s=[/^utm_/,/^fbclid$/],directoryIndex:r="index.html",cleanURLs:c=!0,urlManipulation:a}={}){const t=new URL(e,location.href);t.hash="",yield t.href;const i=function(e,s=[]){for(const r of[...e.searchParams.keys()])s.some((e=>e.test(r)))&&e.searchParams.delete(r);return e}(t,s);if(yield i.href,r&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=r,yield e.href}if(c){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:t});for(const s of e)yield s.href}}(r.url,s)){const s=c.get(a);if(s){return{cacheKey:s,integrity:e.getIntegrityForCacheKey(s)}}}}),e.strategy)}}var S;l({prefix:"armoria-precache"}),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),S={},function(e){k().precache(e)}([{url:"charges/anchor.svg",revision:"8f35b5a26b8dd74682950c4a69cf945d"},{url:"charges/angel.svg",revision:"aba62025f8c02e4b175360c430d1a1e8"},{url:"charges/annulet.svg",revision:"60b2199b6dbf4b25324fccf4ea4abd59"},{url:"charges/armillarySphere.svg",revision:"f8099c544cdd0d2aa8904dd2230c4cc5"},{url:"charges/arrow.svg",revision:"85bb17c45481b79a6237209ce07ae1bb"},{url:"charges/arrowsSheaf.svg",revision:"1c3699ecd92cb75a2f341dbed9d07f9a"},{url:"charges/attire.svg",revision:"60770f0d21092a1e8f5f5f7f00f4411e"},{url:"charges/axe.svg",revision:"76f9c8e0dd8aef84b10b44800b9a4e87"},{url:"charges/bearPassant.svg",revision:"69b2b1633fc8f436ca6935d0e5a32910"},{url:"charges/bearRampant.svg",revision:"ddc02426f6744e410ce3bc9ab50e0781"},{url:"charges/bell.svg",revision:"7c02ab160b636a8961c9869e2e47c242"},{url:"charges/billet.svg",revision:"6075324eccc5b5bb69b26457c82b67f4"},{url:"charges/boarRampant.svg",revision:"9852db087fe2f8fae07f743230248c55"},{url:"charges/boat.svg",revision:"fadd8f3bb5646923679c19a5cde42894"},{url:"charges/boat2.svg",revision:"7b72c5fca6aa07a475eaa532ab5682f4"},{url:"charges/bow.svg",revision:"38698f57b4e1b513f1d8695733fbd8e0"},{url:"charges/bowWithArrow.svg",revision:"20a60cdd63549a7664e7dcb5b15a4a69"},{url:"charges/bucket.svg",revision:"3029c461dec26dd4560a715ca83e644a"},{url:"charges/buckle.svg",revision:"169bf884e73eba2206716ac66d290e2e"},{url:"charges/bugleHorn.svg",revision:"c6057ddbed2935e83a327208f78c0212"},{url:"charges/bugleHorn2.svg",revision:"4a5cc24b742b9229c85f939a9bf2cc70"},{url:"charges/bullHeadCaboshed.svg",revision:"5d0db1806267f9098bde78acb9a02906"},{url:"charges/bullPassant.svg",revision:"284ad89c3e52f1739576fab3c103b6b8"},{url:"charges/camel.svg",revision:"30009f9f5441d095efdd3eb993058725"},{url:"charges/cancer.svg",revision:"8c884ff072a792e76428a6bd331cf123"},{url:"charges/carreau.svg",revision:"c1f7eadf64562c77abbe3aa48acc606f"},{url:"charges/castle.svg",revision:"8ad64fc20d5784354f439f62922823c2"},{url:"charges/cavalier.svg",revision:"98098a7e8d7170e347afd0d98475d810"},{url:"charges/chalice.svg",revision:"ea60457e545de7d3e0386456ba7581d1"},{url:"charges/cinquefoil.svg",revision:"82b4f5d815b0bc28bb22a81fe20a21d8"},{url:"charges/cock.svg",revision:"751a64b11d89ef24c298d281d35cde78"},{url:"charges/compassRose.svg",revision:"10dcc9a098ae0347bcf00e60db813ef6"},{url:"charges/cowHorns.svg",revision:"c9776c85fe53fe80b6b5483615b2bfc8"},{url:"charges/crescent.svg",revision:"eaeeebced72c1fc1f63256070bedec67"},{url:"charges/crosier.svg",revision:"7f4b86c5be460f530c15e2aaf05aee90"},{url:"charges/crossAnkh.svg",revision:"4cf9e70dee54a466e70c46530e42b902"},{url:"charges/crossArrowed.svg",revision:"477c882b3502fe332bb7e820171c6ee9"},{url:"charges/crossAvellane.svg",revision:"2f7a47ddc7788d95e3e488985200d50e"},{url:"charges/crossBiparted.svg",revision:"ecb8adddb031df7e55521eec8cf5d34e"},{url:"charges/crossBottony.svg",revision:"93b40cb28b1132920b4171c2f957a20b"},{url:"charges/crossBurgundy.svg",revision:"c3a1c54858586a8dd099a6e874b4782d"},{url:"charges/crossCalvary.svg",revision:"255e014fdfa16fe6af105583dae80ead"},{url:"charges/crossCarolingian.svg",revision:"e31316419758e4a3f8349facec6982fc"},{url:"charges/crossCeltic.svg",revision:"d8f18487ea9e776274ac7ed3ce13f42b"},{url:"charges/crossCeltic2.svg",revision:"73ef09de83d0ce5b02e9689bd3e5aac6"},{url:"charges/crossCercelee.svg",revision:"a1f2a9f17726d3ee0d9536932e9a3e95"},{url:"charges/crossClechy.svg",revision:"675b6a2205c955718aaa713aa94ce357"},{url:"charges/crossDouble.svg",revision:"c2815247671a104ae0059f7b9e684566"},{url:"charges/crossErminee.svg",revision:"656ac48e0cf4e4eafd373e722e92b148"},{url:"charges/crossFitchy.svg",revision:"40e26f85f7d2af26d525fb3a7bdc7c06"},{url:"charges/crossFleury.svg",revision:"153aac757467e6619cffbbaa0f8db4a1"},{url:"charges/crossFormee.svg",revision:"ad821adcb40f6bbed283e9cd59ad948d"},{url:"charges/crossFormee2.svg",revision:"3e4199512d81aa3c2d5e46539aa7da3b"},{url:"charges/crossFourchy.svg",revision:"0cfb8c850e93d1c2a17967f50ea87c6b"},{url:"charges/crossGamma.svg",revision:"cdf04b586fe5b8858e1e9cd7cf639c9f"},{url:"charges/crossHummetty.svg",revision:"5c33334dea486f30a8b508ef07bb47a0"},{url:"charges/crossJerusalem.svg",revision:"9591b00c54d9ec40b137e7a4afc7ba5e"},{url:"charges/crossLatin.svg",revision:"5c1ae6bbd80169fbcfba6b817a956ad7"},{url:"charges/crosslet.svg",revision:"73cf79ea60cdfbee3bd23ba5265d6c3a"},{url:"charges/crossMaltese.svg",revision:"1b860515a8f30d34a3ef47178b937c5a"},{url:"charges/crossMoline.svg",revision:"57a0f211fc0613aadf79ee599e87a58d"},{url:"charges/crossOccitan.svg",revision:"3ca460ae8c030497fbbc177871587fa3"},{url:"charges/crossOrthodox.svg",revision:"53c208a874c8ac0404b9b9f055c40697"},{url:"charges/crossPatonce.svg",revision:"e18a4655f52e84dcdf7648a4c499a61e"},{url:"charges/crossPatriarchal.svg",revision:"f49b59a59638776f1e17d7383b688588"},{url:"charges/crossPattee.svg",revision:"69a959751f5ae2e19173f850339cec13"},{url:"charges/crossPatteeAlisee.svg",revision:"9e0834e50a6f35485262e4d32c06bc5b"},{url:"charges/crossPommy.svg",revision:"8c555e2e1871a0d70307f8495090dbb2"},{url:"charges/crossPotent.svg",revision:"06eeb39d7819df7ce038c350eb579ecc"},{url:"charges/crossSaltire.svg",revision:"0e71e22f01cbb1ca35c2aa6af7325f3e"},{url:"charges/crossSantiago.svg",revision:"0ae7ea900478483f2673081068c24d71"},{url:"charges/crossTau.svg",revision:"d6be4bd8aa7095f9cd4793581e5d2049"},{url:"charges/crossTemplar.svg",revision:"4e3fe21b8e53d6435c6e4ebe2b808397"},{url:"charges/crossTriquetra.svg",revision:"382d468e4ebd705096344a7460f74090"},{url:"charges/crossVoided.svg",revision:"5b2b7217715a2489d8538d059d6cbdb3"},{url:"charges/crown.svg",revision:"8c2fb85bf77a08969c4a6e999e75ce4e"},{url:"charges/deerHeadCaboshed.svg",revision:"967fbbec081fa76c73f96bb99c2577c9"},{url:"charges/delf.svg",revision:"fd12cec26d197aa17c74e7c9a3cfaabc"},{url:"charges/dolphin.svg",revision:"841d51dcd91998597e0549909d1e0cc5"},{url:"charges/dragonPassant.svg",revision:"7c337eca3ada8e28e2b69291a51c4fcb"},{url:"charges/dragonRampant.svg",revision:"6c3d931b2842707e80d1d371a5c7b493"},{url:"charges/eagle.svg",revision:"79c27c85210db784dbb7e192153580f4"},{url:"charges/eagleTwoHeards.svg",revision:"a2fb78ac56c9022644be922728a9f51c"},{url:"charges/elephant.svg",revision:"80c08f3ee8f690d1050e9ec890e3fde2"},{url:"charges/escallop.svg",revision:"94304c7cd5716b86b6b42fb790240ebd"},{url:"charges/estoile.svg",revision:"08affb2242d8b1351d3e31ad43ae75f2"},{url:"charges/fasces.svg",revision:"63c735d07aecb9aedff2bb79479e210f"},{url:"charges/fleurDeLis.svg",revision:"b475d00b79cda89d42e1992dd9cf1183"},{url:"charges/fountain.svg",revision:"1b7cc86f9730d83ce7fbb7e19287faa1"},{url:"charges/fusil.svg",revision:"1f166f0392cc0f00be9906e6ef59e69c"},{url:"charges/garb.svg",revision:"cd57258becc86d44fc11834220be5903"},{url:"charges/goat.svg",revision:"92be671341675ccc3fb3f401e550dae3"},{url:"charges/goutte.svg",revision:"43178240051cf896b0551fac75571d08"},{url:"charges/greyhoundCourant.svg",revision:"1663a325abddcb84f7494357429d79dc"},{url:"charges/griffinPassant.svg",revision:"928751f5110e1bc2d853349cf3bfdc1b"},{url:"charges/griffinRampant.svg",revision:"b24462ab85bf5c8a08c1affa833682c7"},{url:"charges/hand.svg",revision:"0c48af1d38995d82f7c60f614c8b491e"},{url:"charges/harp.svg",revision:"a403e5a991db855fb3c3dd8dd7326c23"},{url:"charges/hatchet.svg",revision:"f1688d0f173565010a7c00eb37eb0abc"},{url:"charges/head.svg",revision:"fe7c42304d4208e1200b6dc7b4c05b80"},{url:"charges/headWreathed.svg",revision:"40c1bfd590cd73dc8d0f21e359ad5e05"},{url:"charges/heart.svg",revision:"2551bd08932278e8f2a33f67dba370b1"},{url:"charges/helmet.svg",revision:"065036f263ab18eceb654793a2f4cd09"},{url:"charges/heron.svg",revision:"ef366ec39ab61ae9ef395dec1b296e24"},{url:"charges/horseRampant.svg",revision:"035a60b93453cdaa600468b87b03d4b8"},{url:"charges/horseSalient.svg",revision:"1dc6ea98386bd47f0423ac042166636b"},{url:"charges/horseshoe.svg",revision:"1ef182da98ada0cebbd8f1fcd300d06d"},{url:"charges/key.svg",revision:"854c15b740b11de1930055848b1805fe"},{url:"charges/lamb.svg",revision:"8290ab6db2b849077a9c9dfb5c555b8f"},{url:"charges/lionHeadCaboshed.svg",revision:"24d400067e39e78110092e25add2ed7a"},{url:"charges/lionPassant.svg",revision:"653233e72f4ed8bc310a1366f07ccae4"},{url:"charges/lionPassantGuardant.svg",revision:"13495915c08b7140f35761377eac65d7"},{url:"charges/lionRampant.svg",revision:"9ec47506ec12b5779c1b89c946c82818"},{url:"charges/lochaberAxe.svg",revision:"ed27c7685706b943e33da2534e864f6b"},{url:"charges/log.svg",revision:"fd3e36a8c06db26297a4a8a6b375418c"},{url:"charges/lozenge.svg",revision:"4e00b4165c12f55b2688eff90cf478cc"},{url:"charges/lozengeFaceted.svg",revision:"e2b267681589ae18a31fa30bf687e190"},{url:"charges/lozengePloye.svg",revision:"f3b12988a2501f5bc8b5b65e78b7962f"},{url:"charges/lute.svg",revision:"4d6fe55dcd7eedfe31a2a96ecc2b4ac7"},{url:"charges/lymphad.svg",revision:"220e8c54df82fe8815ebdf201f717608"},{url:"charges/mallet.svg",revision:"61d77fc8eb4ab8ae12b8b19e5cc2cd71"},{url:"charges/mascle.svg",revision:"44174648ffa8597f2c29e32ce015f63b"},{url:"charges/monk.svg",revision:"ce616cc8edc2d856d7a1b03117145e75"},{url:"charges/mullet.svg",revision:"5548239879030971b660e2db3ab464d8"},{url:"charges/mullet10.svg",revision:"5bb4426e6842e222bc1f04aebecee851"},{url:"charges/mullet4.svg",revision:"d65979490dcefbf2c5fe5bd3e8a020e3"},{url:"charges/mullet6.svg",revision:"dd83dbf8e110c66ca5aed4be0df45d29"},{url:"charges/mullet6Faceted.svg",revision:"56ff39d70ca8a76caa3bc36d388e6c8b"},{url:"charges/mullet6Pierced.svg",revision:"210df42221478bdf05f26153d770b109"},{url:"charges/mullet7.svg",revision:"5e5aedc678d1e512047c1b98b28c3634"},{url:"charges/mullet8.svg",revision:"b085ecd0ce519c63d4f63c26bcea3946"},{url:"charges/mulletFaceted.svg",revision:"a7c0244ddf72748992bcb37f45e4689e"},{url:"charges/mulletPierced.svg",revision:"bc0689199922a518eaa74702dad10d20"},{url:"charges/oak.svg",revision:"123a4e116076b80359f847e5c5cf06d7"},{url:"charges/orb.svg",revision:"f0f1d983fefcf503c16c7a3e908a4007"},{url:"charges/owl.svg",revision:"02e4ce8cf07aa0b5d14a30a66b9eaac3"},{url:"charges/parrot.svg",revision:"784751c0d24ccb0e4782ea849a135a01"},{url:"charges/pegasus.svg",revision:"b7cd198da24e5574a49fdbdf40015dd4"},{url:"charges/pike.svg",revision:"57def4a34d406256be6cef0510b6d2cb"},{url:"charges/pique.svg",revision:"815f9678633b318c4cc5bc636704836b"},{url:"charges/pot.svg",revision:"b16e0507aeee017ecaeb03cbd98034bb"},{url:"charges/rake.svg",revision:"aed13393d2935f01de2d7039c1b58c5b"},{url:"charges/ramsHorn.svg",revision:"964e5353f42fcc4d641fd5f323523a6c"},{url:"charges/raven.svg",revision:"15f6d15b833cf86db55ec7537a7be7ff"},{url:"charges/rose.svg",revision:"913a1f8ebc3b0f59fd95c1088b7d2c99"},{url:"charges/roundel.svg",revision:"18ccf3422d8bbd5141577563bfc3d6ac"},{url:"charges/roundel2.svg",revision:"1855d9168a7c2583b68599b57a1c532e"},{url:"charges/rustre.svg",revision:"c9070b83a3a2d39f4110f4d8272d1426"},{url:"charges/sabre.svg",revision:"f1fc161c292ceb34a61b55f52efdc406"},{url:"charges/sabresCrossed.svg",revision:"1c497dc2989e3958f40cc605adcc8912"},{url:"charges/serpent.svg",revision:"55bbd9372f0b00c3a32ecd22850c4c01"},{url:"charges/stagsAttires.svg",revision:"09d13c38a48b0167fc847e1807433c06"},{url:"charges/sun.svg",revision:"13c112565aff0702cc6b1060f7d68e14"},{url:"charges/sunInSplendour.svg",revision:"013cfef6341912d4016a3fa200d5eb3d"},{url:"charges/swan.svg",revision:"a072dd53232f2e5be60aa427506540b8"},{url:"charges/swanErased.svg",revision:"a5b58395e398e5de7c06b527985ee96f"},{url:"charges/sword.svg",revision:"8fd4f562f669dec5cdddcd5da51dcbf7"},{url:"charges/template.svg",revision:"82c6a01fcb9ac0dc274bc73525fd1bf0"},{url:"charges/tower.svg",revision:"0b408d9b472f5021f56cd6bd967e087d"},{url:"charges/tree.svg",revision:"d547b60288de96298869939da69eddc4"},{url:"charges/trefle.svg",revision:"4526fe827b998831b50d9ade445361b9"},{url:"charges/triangle.svg",revision:"a3fbbc28cd8c6f1fb33859911e0c656b"},{url:"charges/trianglePierced.svg",revision:"516db921194b747c3c82fdcf0fc674da"},{url:"charges/unicornRampant.svg",revision:"da06f4eba12093bea22bd87bface799c"},{url:"charges/wheel.svg",revision:"cc545fbcf1eb1bde803a27d2439b0920"},{url:"charges/wing.svg",revision:"5f907bab505e9be11aba793300b50697"},{url:"charges/wingSword.svg",revision:"8866f2b4a5a87269c49bc517eb14282e"},{url:"charges/wolfHeadErased.svg",revision:"b1818c4730bb6c90f7586488c047f647"},{url:"charges/wolfPassant.svg",revision:"429788d8a83b6d782967ed1e7ef36ad8"},{url:"charges/wolfRampant.svg",revision:"743e21a611981ea7c0ef030a42e31d33"},{url:"charges/wolfStatant.svg",revision:"c4e1a754f26bff66ffbe5302973d9bc9"},{url:"charges/wyvern.svg",revision:"d7954cad4b7793ec13c9b2ff02e30d92"},{url:"charges/wyvernWithWingsDisplayed.svg",revision:"071c46779269ed41fdd875d1b9a9a0cc"},{url:"logo.svg",revision:"7074f422dd29d8dba45d6149142fcc43"}]),function(e){const s=k();o(new N(s,e))}(S),self.addEventListener("activate",(e=>{const s=g();e.waitUntil((async(e,s="-precache-")=>{const r=(await self.caches.keys()).filter((r=>r.includes(s)&&r.includes(self.registration.scope)&&r!==e));return await Promise.all(r.map((e=>self.caches.delete(e)))),r})(s).then((e=>{})))})),o(/\.(js|css|html)$/,new class extends m{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(f)}async U(e,r){const c=r.fetchAndCachePut(e).catch((()=>{}));let a,t=await r.cacheMatch(e);if(t);else try{t=await c}catch(e){e instanceof Error&&(a=e)}if(!t)throw new s("no-response",{url:e.url,error:a});return t}}({cacheName:"armoria-app-files",plugins:[]}),"GET");
//# sourceMappingURL=sw.js.map
